(()=>{var e={};e.id=730,e.ids=[730],e.modules={2934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1017:e=>{"use strict";e.exports=require("path")},7310:e=>{"use strict";e.exports=require("url")},3478:(e,t,r)=>{"use strict";r.r(t),r.d(t,{GlobalError:()=>n.a,__next_app__:()=>u,originalPathname:()=>p,pages:()=>c,routeModule:()=>m,tree:()=>d}),r(1335),r(6877),r(2075);var a=r(2504),i=r(5932),s=r(6550),n=r.n(s),o=r(6979),l={};for(let e in o)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(l[e]=()=>o[e]);r.d(t,l);let d=["",{children:["topics",{children:["[topic]",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(r.bind(r,1335)),"/Users/tiannaalinalopes/projects/dsa-guide/app/topics/[topic]/page.tsx"]}]},{}]},{metadata:{icon:[async e=>(await Promise.resolve().then(r.bind(r,7481))).default(e)],apple:[],openGraph:[],twitter:[],manifest:void 0}}]},{layout:[()=>Promise.resolve().then(r.bind(r,6877)),"/Users/tiannaalinalopes/projects/dsa-guide/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(r.t.bind(r,2075,23)),"next/dist/client/components/not-found-error"],metadata:{icon:[async e=>(await Promise.resolve().then(r.bind(r,7481))).default(e)],apple:[],openGraph:[],twitter:[],manifest:void 0}}],c=["/Users/tiannaalinalopes/projects/dsa-guide/app/topics/[topic]/page.tsx"],p="/topics/[topic]/page",u={require:r,loadChunk:()=>Promise.resolve()},m=new a.AppPageRouteModule({definition:{kind:i.x.APP_PAGE,page:"/topics/[topic]/page",pathname:"/topics/[topic]",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:d}})},2873:(e,t,r)=>{Promise.resolve().then(r.t.bind(r,2994,23)),Promise.resolve().then(r.t.bind(r,6114,23)),Promise.resolve().then(r.t.bind(r,9727,23)),Promise.resolve().then(r.t.bind(r,9671,23)),Promise.resolve().then(r.t.bind(r,1868,23)),Promise.resolve().then(r.t.bind(r,4759,23))},6723:()=>{},5303:()=>{},6877:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>d,metadata:()=>l});var a=r(4150),i=r(8215),s=r.n(i),n=r(623),o=r.n(n);r(7272);let l={title:"DSA Guide",description:"Learn Data Structures and Algorithms"};function d({children:e}){return a.jsx("html",{lang:"en",children:a.jsx("body",{className:`${s().variable} ${o().variable} antialiased`,children:e})})}},1335:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>s,generateStaticParams:()=>i});var a=r(4150);async function i(){return["arrays","linked-lists","trees","sorting","searching"].map(e=>({topic:e}))}function s({params:e}){let{topic:t}=e;return(0,a.jsxs)("div",{children:[a.jsx("h1",{children:t}),a.jsx("p",{children:{arrays:"Arrays are a fundamental data structure...","linked-lists":"Linked Lists are a sequence of elements...",trees:"Trees are a hierarchical data structure...",sorting:"Sorting algorithms include Quick Sort, Merge Sort, etc...",searching:"Searching algorithms include Binary Search, Linear Search, etc..."}[t]||"Topic not found"})]})}},7481:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>i});var a=r(771);let i=e=>[{type:"image/x-icon",sizes:"16x16",url:(0,a.fillMetadataSegment)(".",e.params,"favicon.ico")+""}]},7272:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[424,312,771],()=>r(3478));module.exports=a})();